<html>
<head>
<title>Powershell</title>
<style>
p,body,a,tr,td
             { font-family: Verdana, Arial, Helvetica; font-size: 10pt }
h1,h2,h3,h4,h5,h6
             { font-family: Verdana, Arial, Helvetica; font-weight: normal; font-style: normal; }
h1           { font-size: 20pt }
h2           { font-size: 18pt; font-weight:bold; color: navy }
h3           { font-size: 16pt; font-weight:bold; color: #483d8b }
h4           { font-size: 14pt; font-weight:bold; color:#C71585; margin-bottom:2px; }
</style>
<link type='text/css' rel='stylesheet' href='../styles/highlight.css' /><script type='text/javascript' src='../scripts/highlight.js'></script></head>

<!-- @SortOrder 60 -->

<body>
<h1>You can use DotNetZip from Powershell</h1>

<p>The programming model is the same as for VB or C#, with a few syntactic changes for Powershell.
This page will show some examples.
</p>


<hr/>

<h3>Create a zip file</h3>

<p> This example just creates a simple zipfile
</p>


<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Create a Zip archive</div><pre class="highlight-pre"><span class="highlight-lineno">1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment"># Load the assembly - replace this with your own path</span>
<span class="highlight-lineno">2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-namespace">[System.Reflection.Assembly]</span>::LoadFrom(<span class="highlight-literal">&quot;c:\\dinoch\\bin\\Ionic.Zip.dll&quot;</span>);
<span class="highlight-lineno">3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>$directoryToZip = <span class="highlight-literal">&quot;c:\\temp&quot;</span>;
<span class="highlight-lineno">5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>$zipfile =  <span class="highlight-pshell-cmdlet">new-object</span> Ionic.Zip.ZipFile;
<span class="highlight-lineno">6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>$e= $zipfile.AddEntry(<span class="highlight-literal">&quot;Readme.txt&quot;</span>, <span class="highlight-literal">&quot;This is a zipfile created from within powershell.&quot;</span>)
<span class="highlight-lineno">7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>$e= $zipfile.AddDirectory($directoryToZip, <span class="highlight-literal">&quot;home&quot;</span>)
<span class="highlight-lineno">8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>$zipfile.Save(<span class="highlight-literal">&quot;ZipFiles.ps1.out.zip&quot;</span>);
<span class="highlight-lineno">9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>$zipfile.Dispose();</pre>


<h3>Create a zip file using AES encryption</h3>

<p> This example creates a zipfile, using AES 256-bit
encryption to encrypt the entries.
</p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Create an encrypted zip</div><pre class="highlight-pre"><span class="highlight-lineno">&nbsp;1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment"># Load the assembly - replace this with your own path</span>
<span class="highlight-lineno">&nbsp;2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-namespace">[System.Reflection.Assembly]</span>::LoadFrom(<span class="highlight-literal">&quot;c:\\dinoch\\bin\\Ionic.Zip.dll&quot;</span>)
<span class="highlight-lineno">&nbsp;3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>$directoryToZip = <span class="highlight-literal">&quot;c:\\dinoch\\dev\\powershell&quot;</span>
<span class="highlight-lineno">&nbsp;5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>$zipfile =  <span class="highlight-pshell-cmdlet">new-object</span> Ionic.Zip.ZipFile
<span class="highlight-lineno">&nbsp;6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>$zipfile.Encryption = <span class="highlight-namespace">[Ionic.Zip.EncryptionAlgorithm]</span>::WinZipAes256
<span class="highlight-lineno">&nbsp;7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>$zipfile.Password = <span class="highlight-literal">&quot;Albatros$&quot;</span>
<span class="highlight-lineno">&nbsp;8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>$e= $zipfile.AddEntry(<span class="highlight-literal">&quot;Readme.txt&quot;</span>, <span class="highlight-literal">&quot;This is a zipfile created from within powershell.&quot;</span>)
<span class="highlight-lineno">&nbsp;9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>$e= $zipfile.AddSelectedFiles(<span class="highlight-literal">&quot;name != *.zip&quot;</span>, $directoryToZip, <span class="highlight-literal">&quot;home&quot;</span>)
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>$zipfile.Save(<span class="highlight-literal">&quot;ZipFiles.ps1.out.zip&quot;</span>)
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>$zipfile.Dispose()</pre>



<h3>Create a number of zip files, each containing a single file</h3>

<p> This example iterates through a set of files, and creates a
zipfile containing a single file, for each one.
</p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Create a set of Zipfiles</div><pre class="highlight-pre"><span class="highlight-lineno">&nbsp;1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment"># Load the assembly - replace this with your own path</span>
<span class="highlight-lineno">&nbsp;2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-namespace">[System.Reflection.Assembly]</span>::LoadFrom(<span class="highlight-literal">&quot;c:\\dinoch\\bin\\Ionic.Zip.dll&quot;</span>);
<span class="highlight-lineno">&nbsp;3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>foreach ($file in gci $LogPath -filter $FileType -recurse |
<span class="highlight-lineno">&nbsp;5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        where{<span class="highlight-keyword">$_</span>.LastWriteTime -lt <span class="highlight-namespace">[DateTime]</span>::Now.AddDays($DaysOld)})
<span class="highlight-lineno">&nbsp;6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">&nbsp;7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    $FileName = $File.FullName
<span class="highlight-lineno">&nbsp;8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    $ZipName = $File.FullName + <span class="highlight-literal">&quot;.zip&quot;</span>
<span class="highlight-lineno">&nbsp;9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    $zip = <span class="highlight-pshell-cmdlet">new-object</span> Ionic.Zip.ZipFile
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    $zip.AddFile($FileName, <span class="highlight-literal">&quot;&quot;</span>);
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    $zip.Save($ZipName)
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    $zip.Dispose()
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>

</body>
</html>
