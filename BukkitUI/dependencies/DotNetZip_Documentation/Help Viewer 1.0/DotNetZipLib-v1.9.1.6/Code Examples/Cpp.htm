<html>
<head>
<title>C++/CLI</title>
<style>
p,body,a,tr,td
             { font-family: Verdana, Arial, Helvetica; font-size: 10pt }
h1,h2,h3,h4,h5,h6
             { font-family: Verdana, Arial, Helvetica; font-weight: normal; font-style: normal; }
h1           { font-size: 20pt }
h2           { font-size: 18pt; font-weight:bold; color: navy }
h3           { font-size: 16pt; font-weight:bold; color: #483d8b }
h4           { font-size: 14pt; font-weight:bold; color:#C71585; margin-bottom:2px; }
</style>
<link type='text/css' rel='stylesheet' href='../styles/highlight.css' /><script type='text/javascript' src='../scripts/highlight.js'></script></head>

<!-- @SortOrder 80 -->

<body>
<h1>You can use DotNetZip from C++/CLI</h1>

<p>
  A program written in C++/CLI can take advantage of any managed
  library. It&quot;s easy to use DotNetZip from a C++/CLI application.  This
  page will show some examples.
</p>

<p>
  Using C++/CLI, the key difference from VB and C#, is that there is
  no <strong>using</strong> statement in C++.  C++ applications need to
  surround the use of the ZipFile class with a try..catch.. and call the
  ZipFile destructor, or call delete, in the finally clause.
</p>

<hr/>

<h3>Create a zip file</h3>

<p> This example just creates a simple zipfile. It uses the destructor.
</p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Create a Zip archive - destructor</div><pre class="highlight-pre"><span class="highlight-lineno">&nbsp;1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> <span class="highlight-keyword">namespace</span> System;
<span class="highlight-lineno">&nbsp;2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> <span class="highlight-keyword">namespace</span> Ionic::Zip;
<span class="highlight-lineno">&nbsp;3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">int</span> main(<span class="highlight-keyword">array</span>&lt;System::String ^&gt; ^args)
<span class="highlight-lineno">&nbsp;5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">&nbsp;6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    Console::WriteLine(L<span class="highlight-literal">&quot;Hello World&quot;</span>);
<span class="highlight-lineno">&nbsp;7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    ZipFile ^ zip;
<span class="highlight-lineno">&nbsp;9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">try</span>
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        zip = <span class="highlight-keyword">gcnew</span> ZipFile();
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        zip-&gt;AddEntry(<span class="highlight-literal">&quot;Readme.txt&quot;</span>, <span class="highlight-literal">&quot;This is the content for the Readme.txt entry.&quot;</span>);
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        zip-&amp;gtAddFile(<span class="highlight-literal">&quot;CreateZipFile.cpp&quot;</span>);
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        zip-&gt;Save(<span class="highlight-literal">&quot;test.zip&quot;</span>);
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">finally</span>
<span class="highlight-lineno">17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">18</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        zip-&gt;~ZipFile();
<span class="highlight-lineno">19</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">20</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">21</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    Console::WriteLine(L<span class="highlight-literal">&quot;Press &lt;ENTER&gt; to quit.&quot;</span>);
<span class="highlight-lineno">22</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    Console::ReadLine();
<span class="highlight-lineno">23</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">return</span> <span class="highlight-number">0</span>;
<span class="highlight-lineno">24</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>

<p> This alternative uses the C++ deleee syntax:
</p>


<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Create a Zip archive - delete</div><pre class="highlight-pre"><span class="highlight-lineno">&nbsp;1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> <span class="highlight-keyword">namespace</span> System;
<span class="highlight-lineno">&nbsp;2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> <span class="highlight-keyword">namespace</span> Ionic::Zip;
<span class="highlight-lineno">&nbsp;3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">int</span> main(<span class="highlight-keyword">array</span>&lt;System::String ^&gt; ^args)
<span class="highlight-lineno">&nbsp;5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">&nbsp;6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    Console::WriteLine(L<span class="highlight-literal">&quot;Hello World&quot;</span>);
<span class="highlight-lineno">&nbsp;7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    ZipFile ^ zip;
<span class="highlight-lineno">&nbsp;9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">try</span>
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        zip = <span class="highlight-keyword">gcnew</span> ZipFile();
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        zip-&gt;AddEntry(<span class="highlight-literal">&quot;Readme.txt&quot;</span>, <span class="highlight-literal">&quot;This is the content for the Readme.txt entry.&quot;</span>);
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        zip-&amp;gtAddFile(<span class="highlight-literal">&quot;CreateZipFile.cpp&quot;</span>);
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        zip-&gt;Save(<span class="highlight-literal">&quot;test.zip&quot;</span>);
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">finally</span>
<span class="highlight-lineno">17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">18</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-keyword">delete</span> zip;
<span class="highlight-lineno">19</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">20</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">21</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    Console::WriteLine(L<span class="highlight-literal">&quot;Press &lt;ENTER&gt; to quit.&quot;</span>);
<span class="highlight-lineno">22</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    Console::ReadLine();
<span class="highlight-lineno">23</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">return</span> <span class="highlight-number">0</span>;
<span class="highlight-lineno">24</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>


<h3>Building C++/CLI program that uses DotNetZip</h3>

<p>Build a C++/CLI program that uses DotNetZip, just as you would build
any C++/CLI program. </p>

<p>The easiest way is to use Visual Studio, and create a C++/CLI
project. Right click on the project and select <span style="font-family:
Courier;">References...</span>.  Add a reference to the Ionic.Zip.dll
assembly.  Click OK, then build your application.</p>

<p>You can also build using command-line tools. To do this, you will
need to compile using the c++ source using the cl.exe tool, specifying
the /clr option, and specifying where to find the Ionic.Zip.dll
assembly. A typical series of steps to build a simple C++/CLI program
that uses DotNetZip from one source file, supposing the name of the
source file is CreateZipFile.cpp, is: </p>

<pre>
  \vc9\bin\cl.exe /Od /FD /EHa /MDd  /Fo".\\"  -I\vc9\include /W3 /c /Zi /clr /TP
      /FU "c:\Windows\Microsoft.NET\Framework\v2.0.50727\System.dll"
      /FU Ionic.Zip.dll CreateZipFile.cpp

  \vc9\bin\link.exe /OUT:CreateZipFile.exe  /DEBUG /ASSEMBLYDEBUG
      /MANIFEST /MANIFESTFILE:"CreateZipFile.exe.intermediate.manifest"
      /MANIFESTUAC:"level='asInvoker' uiAccess='false'"
      /PDB:CreateZipFile.pdb /DYNAMICBASE /FIXED:No /NXCOMPAT /MACHINE:X86
      /LIBPATH:\vc9\lib /LIBPATH:\winsdk\lib CreateZipFile.obj

  c:\netsdk2.0\Bin\mt.exe /outputresource:"CreateZipFile.exe;#1"
      /manifest CreateZipFile.exe.intermediate.manifest
</pre>



<h3>Create a zip file using AES encryption</h3>

<p> This example creates a zipfile, using AES 128-bit
encryption to encrypt the entries.
</p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Create an encrypted zip</div><pre class="highlight-pre"><span class="highlight-lineno">&nbsp;1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-preprocessor">#include</span> <span class="highlight-literal">&quot;stdafx.h&quot;</span>
<span class="highlight-lineno">&nbsp;2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> <span class="highlight-keyword">namespace</span> System;
<span class="highlight-lineno">&nbsp;4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> <span class="highlight-keyword">namespace</span> Ionic::Zip;
<span class="highlight-lineno">&nbsp;5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">int</span> main(<span class="highlight-keyword">array</span>&lt;System::String ^&gt; ^args)
<span class="highlight-lineno">&nbsp;7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">&nbsp;8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    Console::WriteLine(L<span class="highlight-literal">&quot;Hello World&quot;</span>);
<span class="highlight-lineno">&nbsp;9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    ZipFile ^ zip;
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">try</span>
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        zip = <span class="highlight-keyword">gcnew</span> ZipFile();
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        zip-&gt;Password = verySecret;
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        zip-&gt;Encryption = EncryptionAlgorithm::WinZipAes128;
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        zip-&gt;AddEntry(<span class="highlight-literal">&quot;Readme.txt&quot;</span>, <span class="highlight-literal">&quot;This is the content for the Readme.txt entry.&quot;</span>);
<span class="highlight-lineno">17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        zip-&gt;AddFile(<span class="highlight-literal">&quot;Data.csv&quot;</span>);
<span class="highlight-lineno">18</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        zip-&gt;Save(<span class="highlight-literal">&quot;test.zip&quot;</span>);
<span class="highlight-lineno">19</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">20</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">finally</span>
<span class="highlight-lineno">21</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">22</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        zip-&gt;~ZipFile();
<span class="highlight-lineno">23</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">24</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">25</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    Console::WriteLine(L<span class="highlight-literal">&quot;Press &lt;ENTER&gt; to quit.&quot;</span>);
<span class="highlight-lineno">26</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    Console::ReadLine();
<span class="highlight-lineno">27</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">return</span> <span class="highlight-number">0</span>;
<span class="highlight-lineno">28</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>


<h3>Use a SaveProgress event from C++</h3>

<p> This example creates a zipfile, and uses a SaveProgress event.
</p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Create an encrypted zip</div><pre class="highlight-pre"><span class="highlight-lineno">&nbsp;&nbsp;1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-preprocessor">#include</span> <span class="highlight-literal">&quot;stdafx.h&quot;</span>
<span class="highlight-lineno">&nbsp;&nbsp;2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;&nbsp;3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> <span class="highlight-keyword">namespace</span> System;
<span class="highlight-lineno">&nbsp;&nbsp;4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> <span class="highlight-keyword">namespace</span> System::IO;
<span class="highlight-lineno">&nbsp;&nbsp;5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> <span class="highlight-keyword">namespace</span> Ionic::Zip;
<span class="highlight-lineno">&nbsp;&nbsp;6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;&nbsp;7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;&nbsp;8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">ref</span> <span class="highlight-keyword">class</span> DnzHelloCppCli
<span class="highlight-lineno">&nbsp;&nbsp;9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">&nbsp;10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">private</span>:
<span class="highlight-lineno">&nbsp;12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">bool</span> justHadByteUpdate;
<span class="highlight-lineno">&nbsp;13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span>:
<span class="highlight-lineno">&nbsp;15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    DnzHelloCppCli()
<span class="highlight-lineno">&nbsp;16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        {
<span class="highlight-lineno">&nbsp;17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        }
<span class="highlight-lineno">&nbsp;18</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;19</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span>:
<span class="highlight-lineno">&nbsp;20</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">void</span> Run()
<span class="highlight-lineno">&nbsp;21</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        {
<span class="highlight-lineno">&nbsp;22</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            Console::WriteLine(L<span class="highlight-literal">&quot;Hello World&quot;</span>);
<span class="highlight-lineno">&nbsp;23</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            Console::WriteLine(<span class="highlight-literal">&quot;Using DotNetZip version {0}&quot;</span>, ZipFile::LibraryVersion);
<span class="highlight-lineno">&nbsp;24</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            <span class="highlight-keyword">array</span>&lt;String^&gt;^ filesToAdd = System::IO::Directory::GetFiles(<span class="highlight-literal">&quot;.&quot;</span>, <span class="highlight-literal">&quot;*.cpp&quot;</span>);
<span class="highlight-lineno">&nbsp;25</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;26</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            ZipFile ^ zip;
<span class="highlight-lineno">&nbsp;27</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            <span class="highlight-keyword">try</span>
<span class="highlight-lineno">&nbsp;28</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            {
<span class="highlight-lineno">&nbsp;29</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                zip = <span class="highlight-keyword">gcnew</span> ZipFile();
<span class="highlight-lineno">&nbsp;30</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                zip-&gt;Password = <span class="highlight-literal">&quot;Harbinger&quot;</span>;
<span class="highlight-lineno">&nbsp;31</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                zip-&gt;Encryption = EncryptionAlgorithm::WinZipAes128;
<span class="highlight-lineno">&nbsp;32</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                zip-&gt;SaveProgress += <span class="highlight-keyword">gcnew</span> EventHandler&lt;SaveProgressEventArgs^&gt;(<span class="highlight-keyword">this</span>, &amp;DnzHelloCppCli::SaveProgress);
<span class="highlight-lineno">&nbsp;33</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                zip-&gt;AddEntry(<span class="highlight-literal">&quot;Readme.txt&quot;</span>, <span class="highlight-literal">&quot;This is the content for the Readme.txt entry.&quot;</span>);
<span class="highlight-lineno">&nbsp;34</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                zip-&gt;AddFiles(filesToAdd, <span class="highlight-literal">&quot;files&quot;</span>);
<span class="highlight-lineno">&nbsp;35</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                zip-&gt;Save(<span class="highlight-literal">&quot;MyArchive.zip&quot;</span>);
<span class="highlight-lineno">&nbsp;36</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            }
<span class="highlight-lineno">&nbsp;37</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            <span class="highlight-keyword">finally</span>
<span class="highlight-lineno">&nbsp;38</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            {
<span class="highlight-lineno">&nbsp;39</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                zip-&gt;~ZipFile();
<span class="highlight-lineno">&nbsp;40</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            }
<span class="highlight-lineno">&nbsp;41</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;42</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            Console::WriteLine(L<span class="highlight-literal">&quot;Press &lt;ENTER&gt; to quit.&quot;</span>);
<span class="highlight-lineno">&nbsp;43</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            Console::ReadLine();
<span class="highlight-lineno">&nbsp;44</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            <span class="highlight-keyword">return</span>;
<span class="highlight-lineno">&nbsp;45</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        }
<span class="highlight-lineno">&nbsp;46</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;47</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span>:
<span class="highlight-lineno">&nbsp;48</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">void</span> SaveProgress(Object^ sender, SaveProgressEventArgs^ e)
<span class="highlight-lineno">&nbsp;49</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        {
<span class="highlight-lineno">&nbsp;50</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            <span class="highlight-keyword">switch</span> (e-&gt;EventType)
<span class="highlight-lineno">&nbsp;51</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            {
<span class="highlight-lineno">&nbsp;52</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                <span class="highlight-keyword">case</span> ZipProgressEventType::Saving_Started:
<span class="highlight-lineno">&nbsp;53</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                {
<span class="highlight-lineno">&nbsp;54</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    Console::WriteLine(<span class="highlight-literal">&quot;Saving: {0}&quot;</span>, e-&gt;ArchiveName);
<span class="highlight-lineno">&nbsp;55</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    <span class="highlight-keyword">break</span>;
<span class="highlight-lineno">&nbsp;56</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                }
<span class="highlight-lineno">&nbsp;57</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                <span class="highlight-keyword">case</span> ZipProgressEventType::Saving_BeforeWriteEntry:
<span class="highlight-lineno">&nbsp;58</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                {
<span class="highlight-lineno">&nbsp;59</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    <span class="highlight-keyword">if</span> (<span class="highlight-keyword">this</span>-&gt;justHadByteUpdate)
<span class="highlight-lineno">&nbsp;60</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    {
<span class="highlight-lineno">&nbsp;61</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                        Console::WriteLine();
<span class="highlight-lineno">&nbsp;62</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    }
<span class="highlight-lineno">&nbsp;63</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    Console::WriteLine(<span class="highlight-literal">&quot;  Writing: {0} ({1}/{2})&quot;</span>,
<span class="highlight-lineno">&nbsp;64</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                                       e-&gt;CurrentEntry-&gt;FileName,
<span class="highlight-lineno">&nbsp;65</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                                       (e-&gt;EntriesSaved + <span class="highlight-number">1</span>),
<span class="highlight-lineno">&nbsp;66</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                                       e-&gt;EntriesTotal);
<span class="highlight-lineno">&nbsp;67</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    <span class="highlight-keyword">this</span>-&gt;justHadByteUpdate = <span class="highlight-keyword">false</span>;
<span class="highlight-lineno">&nbsp;68</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    <span class="highlight-keyword">break</span>;
<span class="highlight-lineno">&nbsp;69</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                }
<span class="highlight-lineno">&nbsp;70</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                <span class="highlight-keyword">case</span> ZipProgressEventType::Saving_AfterWriteEntry:
<span class="highlight-lineno">&nbsp;71</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                {
<span class="highlight-lineno">&nbsp;72</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    <span class="highlight-keyword">if</span> (e-&gt;CurrentEntry-&gt;InputStreamWasJitProvided)
<span class="highlight-lineno">&nbsp;73</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    {
<span class="highlight-lineno">&nbsp;74</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                        e-&gt;CurrentEntry-&gt;InputStream-&gt;Close();
<span class="highlight-lineno">&nbsp;75</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                        e-&gt;CurrentEntry-&gt;InputStream = <span class="highlight-keyword">nullptr</span>;
<span class="highlight-lineno">&nbsp;76</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    }
<span class="highlight-lineno">&nbsp;77</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    <span class="highlight-keyword">break</span>;
<span class="highlight-lineno">&nbsp;78</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                }
<span class="highlight-lineno">&nbsp;79</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                <span class="highlight-keyword">case</span> ZipProgressEventType::Saving_Completed:
<span class="highlight-lineno">&nbsp;80</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                {
<span class="highlight-lineno">&nbsp;81</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    <span class="highlight-keyword">this</span>-&gt;justHadByteUpdate = <span class="highlight-keyword">false</span>;
<span class="highlight-lineno">&nbsp;82</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    Console::WriteLine();
<span class="highlight-lineno">&nbsp;83</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    Console::WriteLine(<span class="highlight-literal">&quot;Done: {0}&quot;</span>, e-&gt;ArchiveName);
<span class="highlight-lineno">&nbsp;84</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    <span class="highlight-keyword">break</span>;
<span class="highlight-lineno">&nbsp;85</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                }
<span class="highlight-lineno">&nbsp;86</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                <span class="highlight-keyword">case</span> ZipProgressEventType::Saving_EntryBytesRead:
<span class="highlight-lineno">&nbsp;87</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                {
<span class="highlight-lineno">&nbsp;88</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    <span class="highlight-keyword">if</span> (<span class="highlight-keyword">this</span>-&gt;justHadByteUpdate)
<span class="highlight-lineno">&nbsp;89</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    {
<span class="highlight-lineno">&nbsp;90</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                        Console::SetCursorPosition(<span class="highlight-number">0</span>, Console::CursorTop);
<span class="highlight-lineno">&nbsp;91</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    }
<span class="highlight-lineno">&nbsp;92</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    Console::Write(<span class="highlight-literal">&quot;     {0}/{1} ({2:N0}%)&quot;</span>,
<span class="highlight-lineno">&nbsp;93</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                                   e-&gt;BytesTransferred,
<span class="highlight-lineno">&nbsp;94</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                                   e-&gt;TotalBytesToTransfer,
<span class="highlight-lineno">&nbsp;95</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                                   (((<span class="highlight-keyword">double</span>) e-&gt;BytesTransferred) / (<span class="highlight-number">0.01</span> * e-&gt;TotalBytesToTransfer)));
<span class="highlight-lineno">&nbsp;96</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    <span class="highlight-keyword">this</span>-&gt;justHadByteUpdate = <span class="highlight-keyword">true</span>;
<span class="highlight-lineno">&nbsp;97</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                    <span class="highlight-keyword">break</span>;
<span class="highlight-lineno">&nbsp;98</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                }
<span class="highlight-lineno">&nbsp;99</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            }
<span class="highlight-lineno">100</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        }
<span class="highlight-lineno">101</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">102</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>};
<span class="highlight-lineno">103</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">104</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">105</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">int</span> main(<span class="highlight-keyword">array</span>&lt;System::String ^&gt; ^args)
<span class="highlight-lineno">106</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">107</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">try</span>
<span class="highlight-lineno">108</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">109</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        DnzHelloCppCli^ me = <span class="highlight-keyword">gcnew</span> DnzHelloCppCli();
<span class="highlight-lineno">110</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        me-&gt;Run();
<span class="highlight-lineno">111</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">112</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">catch</span> (Exception^ ex1)
<span class="highlight-lineno">113</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">114</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        Console::Error-&gt;WriteLine(String::Concat(<span class="highlight-literal">&quot;exception: &quot;</span>, ex1));
<span class="highlight-lineno">115</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">116</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">return</span> <span class="highlight-number">0</span>;
<span class="highlight-lineno">117</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>


</body>
</html>
