<html>
<head>
<title>C#</title>
<style>
p,body,a,tr,td
             { font-family: Verdana, Arial, Helvetica; font-size: 10pt }
h1,h2,h3,h4,h5,h6
             { font-family: Verdana, Arial, Helvetica; font-weight: normal; font-style: normal; }
h1           { font-size: 20pt }
h2           { font-size: 18pt; font-weight:bold; color: navy }
h3           { font-size: 16pt; font-weight:bold; color: #483d8b }
h4           { font-size: 14pt; font-weight:bold; color:#C71585; margin-bottom:2px; }
</style>
<link type='text/css' rel='stylesheet' href='../styles/highlight.css' /><script type='text/javascript' src='../scripts/highlight.js'></script></head>

<!-- @SortOrder 20 -->

<body>
<h1>DotNetZip - C# Examples</h1>

<p>Here are a bunch of examples in C# that illustrate how to use the library.
</p>

<p>There are a few complete, working example applications shipped in the source code distribution. </p>

<hr/>
<p>Create a zip file, and add items to it.</p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Add Items 1</div><pre class="highlight-pre"><span class="highlight-lineno">1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (ZipFile zip = <span class="highlight-keyword">new</span> ZipFile())
<span class="highlight-lineno">2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.AddFile(<span class="highlight-literal">&quot;ReadMe.txt&quot;</span>);
<span class="highlight-lineno">4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.AddFile(<span class="highlight-literal">&quot;Resume.doc&quot;</span>);
<span class="highlight-lineno">5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.AddFile(<span class="highlight-literal">&quot;Portrait.png&quot;</span>);
<span class="highlight-lineno">6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Save(<span class="highlight-literal">&quot;Package.zip&quot;</span>);
<span class="highlight-lineno">7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>


<hr/>

<p>Add items to a zip file, using Zip 2.0 encryption, and the same password for all items.</p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Add Items 2</div><pre class="highlight-pre"><span class="highlight-lineno">1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (ZipFile zip = <span class="highlight-keyword">new</span> ZipFile())
<span class="highlight-lineno">2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Password= <span class="highlight-literal">&quot;123456!&quot;</span>;
<span class="highlight-lineno">4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.AddFile(<span class="highlight-literal">&quot;ReadMe.txt&quot;</span>);
<span class="highlight-lineno">5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.AddFile(<span class="highlight-literal">&quot;7440-N49th.png&quot;</span>);
<span class="highlight-lineno">6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.AddFile(<span class="highlight-literal">&quot;2005_Annual_Report.pdf&quot;</span>);
<span class="highlight-lineno">7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Save(<span class="highlight-literal">&quot;Backup.zip&quot;</span>);
<span class="highlight-lineno">8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>


<hr/>

<p>Add files to a zip file, using Zip 2.0 encryption, and different passwords for different files.</p>
<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Add items 3</div><pre class="highlight-pre"><span class="highlight-lineno">&nbsp;1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (ZipFile zip = <span class="highlight-keyword">new</span> ZipFile())
<span class="highlight-lineno">&nbsp;2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">&nbsp;3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.AddFile(<span class="highlight-literal">&quot;ReadMe.txt&quot;</span>); <span class="highlight-comment">// no password for this one</span>
<span class="highlight-lineno">&nbsp;4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Password= <span class="highlight-literal">&quot;123456!&quot;</span>;
<span class="highlight-lineno">&nbsp;5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.AddFile(<span class="highlight-literal">&quot;7440-N49th.png&quot;</span>);
<span class="highlight-lineno">&nbsp;6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Password= <span class="highlight-literal">&quot;!Secret1&quot;</span>;
<span class="highlight-lineno">&nbsp;7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.AddFile(<span class="highlight-literal">&quot;2005_Annual_Report.pdf&quot;</span>);
<span class="highlight-lineno">&nbsp;8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Save(<span class="highlight-literal">&quot;Backup.zip&quot;</span>);
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>


<p>Create a zip archive, and add files to it, using WinZip-compatible AES 256-bit encryption for one of the files.</p>
<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Add items 4</div><pre class="highlight-pre"><span class="highlight-lineno">1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (ZipFile zip = <span class="highlight-keyword">new</span> ZipFile())
<span class="highlight-lineno">2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.AddFile(<span class="highlight-literal">&quot;ReadMe.txt&quot;</span>); <span class="highlight-comment">// no password for this one</span>
<span class="highlight-lineno">4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Password= <span class="highlight-literal">&quot;Cool.Hand.Luke!&quot;</span>;
<span class="highlight-lineno">5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Encryption= EncryptionAlgorithm.WinZipAes256;
<span class="highlight-lineno">6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.AddFile(<span class="highlight-literal">&quot;Rawdata-2008-12-18.csv&quot;</span>);
<span class="highlight-lineno">7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Save(<span class="highlight-literal">&quot;Backup-AES-Encrypted.zip&quot;</span>);
<span class="highlight-lineno">8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>



<hr/>

<p>
Create a zip, and add a file, telling the library to not use compression
when adding in the file. This makes sense with previously-compressed
files such as those in .mp3 format.  The Deflate algorithm can actually
increase the size of a data stream that has already been compressed.
The DotNetZip library intelligently turns off compression for those
files that get bigger with compression, but the ForceNoCompression
property allows you to do it explicitly.
</p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>No Compression</div><pre class="highlight-pre"><span class="highlight-lineno">1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (ZipFile zip = <span class="highlight-keyword">new</span> ZipFile())
<span class="highlight-lineno">2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.ForceNoCompression = <span class="highlight-keyword">true</span>;
<span class="highlight-lineno">4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.AddFile(<span class="highlight-literal">@&quot;MyMusic\Handel\Messiah-01.mp3&quot;</span>);
<span class="highlight-lineno">5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Save(ZipFileToCreate);
<span class="highlight-lineno">6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>



<hr/>

<p>Zip up an entire directory, recursively.  Use unicode to encode
entries in the archive, for those files in that directory tree that have
characters outside the ANSI range.  Finally, specify a comment on the
zip archive when creating it. (Be careful using Unicode - it is not
widely supported by other zip utilities)</p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Zip a directory</div><pre class="highlight-pre"><span class="highlight-lineno">1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (ZipFile zip = <span class="highlight-keyword">new</span> ZipFile())
<span class="highlight-lineno">2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.UseUnicode= <span class="highlight-keyword">true</span>;  <span class="highlight-comment">// utf-8</span>
<span class="highlight-lineno">4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.AddDirectory(<span class="highlight-literal">@&quot;MyDocuments\ProjectX&quot;</span>);
<span class="highlight-lineno">5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Comment = <span class="highlight-literal">&quot;This zip was created at &quot;</span> + System.DateTime.Now.ToString(<span class="highlight-literal">&quot;G&quot;</span>) ;
<span class="highlight-lineno">6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Save(ZipFileToCreate);
<span class="highlight-lineno">7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>



<hr/>

<p>Zip up an entire directory, recursively.  Use the "big5" encoding for
those files in that directory tree that have
chinese characters.
</p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Zip a directory 2</div><pre class="highlight-pre"><span class="highlight-lineno">1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (ZipFile zip = <span class="highlight-keyword">new</span> ZipFile())
<span class="highlight-lineno">2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Encoding = System.Text.Encoding.GetEncoding(<span class="highlight-literal">&quot;big5&quot;</span>); <span class="highlight-comment">// chinese</span>
<span class="highlight-lineno">4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.AddDirectory(<span class="highlight-literal">@&quot;MyDocuments\ProjectX&quot;</span>);
<span class="highlight-lineno">5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Save(ZipFileToCreate);
<span class="highlight-lineno">6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>



<hr/>

<p>Zip up an file, using the ZIP64 extensions if necessary to support large files.
</p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Zip64</div><pre class="highlight-pre"><span class="highlight-lineno">1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (ZipFile zip = <span class="highlight-keyword">new</span> ZipFile())
<span class="highlight-lineno">2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.UseZip64WhenSaving = Zip64Option.AsNecessary;
<span class="highlight-lineno">4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.AddFile(<span class="highlight-literal">@&quot;RawData-HugeFile-13800.dat&quot;</span>);
<span class="highlight-lineno">5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Save(ZipFileToCreate);
<span class="highlight-lineno">6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>



<hr/>

<p>Zip up a set of files, each protected by the same password. Also,
explicitly  override the last modified time for all of the files as they are stored
in the zip archive.</p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Set Last Modified time</div><pre class="highlight-pre"><span class="highlight-lineno">&nbsp;1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>&lt;hr/&gt;
<span class="highlight-lineno">&nbsp;2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>&lt;p&gt;Zip up a set of files and directories, and re-map them into a
<span class="highlight-lineno">&nbsp;4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>different directory hierarchy <span class="highlight-keyword">in</span> the zip file.&lt;/p&gt;
<span class="highlight-lineno">&nbsp;5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>&lt;pre lang=<span class="highlight-literal">&quot;cs&quot;</span> numberLines=<span class="highlight-literal">&quot;true&quot;</span> outlining=<span class="highlight-literal">&quot;true&quot;</span>
<span class="highlight-lineno">&nbsp;7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  title=<span class="highlight-literal">&quot;remap directories&quot;</span>&gt;
<span class="highlight-lineno">&nbsp;8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-keyword">using</span> (ZipFile zip = <span class="highlight-keyword">new</span> ZipFile())
<span class="highlight-lineno">&nbsp;9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  {
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// files in the filesystem like MyDocuments\ProjectX\File1.txt , will be stored in the zip archive as  backup\File1.txt</span>
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    zip.AddDirectory(<span class="highlight-literal">@&quot;MyDocuments\ProjectX&quot;</span>, <span class="highlight-literal">&quot;backup&quot;</span>);
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// files in the filesystem like MyMusic\Santana\OyeComoVa.mp3, will be stored in the zip archive as  tunes\Santana\OyeComoVa.mp3</span>
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    zip.AddDirectory(<span class="highlight-literal">&quot;MyMusic&quot;</span>, <span class="highlight-literal">&quot;tunes&quot;</span>);
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// The Readme.txt file in the filesystem will be stored in the zip archive as documents\Readme.txt</span>
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    zip.AddDirectory(<span class="highlight-literal">&quot;Readme.txt&quot;</span>, <span class="highlight-literal">&quot;documents&quot;</span>);
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    zip.Comment = <span class="highlight-literal">&quot;This zip was created at &quot;</span> + System.DateTime.Now.ToString(<span class="highlight-literal">&quot;G&quot;</span>) ;
<span class="highlight-lineno">18</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    zip.Save(ZipFileToCreate);
<span class="highlight-lineno">19</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  }</pre>

<hr/>

<p>Add content obtained from a stream (MemoryStrean, FileStream, etc)
into a zip archive. Also, add a comment to the entry that was added from
the stream.</p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Streams</div><pre class="highlight-pre"><span class="highlight-lineno">1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (ZipFile zip = <span class="highlight-keyword">new</span> ZipFile())
<span class="highlight-lineno">2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  ZipEntry e= zip.AddEntry(<span class="highlight-literal">&quot;Content-From-Stream.bin&quot;</span>, StreamToRead);
<span class="highlight-lineno">4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  e.Comment = <span class="highlight-literal">&quot;The content for entry in the zip file was obtained from a stream&quot;</span>;
<span class="highlight-lineno">5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.AddFile(<span class="highlight-literal">&quot;Readme.txt&quot;</span>);
<span class="highlight-lineno">6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Save(ZipToCreate);
<span class="highlight-lineno">7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>


<hr/>

<p>Open an existing zip file, remove an entry from it, and save the archive.  This was first supported in v1.5 of the library.</p>
<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Remove an entry</div><pre class="highlight-pre"><span class="highlight-lineno">1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (ZipFile zip = ZipFile.Read(ExistingZipFile))
<span class="highlight-lineno">2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-comment">// use the indexer to remove the file from the zip archive</span>
<span class="highlight-lineno">4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip[<span class="highlight-literal">&quot;Readme.txt&quot;</span>] = <span class="highlight-keyword">null</span>;
<span class="highlight-lineno">5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Comment = <span class="highlight-literal">&quot;This archive has been modified from its original version. Some files have been removed.&quot;</span>;
<span class="highlight-lineno">6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Save();
<span class="highlight-lineno">7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>


<hr/>

<p>Open an existing zip file, rename an entry, then save it. This was first supported in v1.7 of the library.</p>
<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Rename</div><pre class="highlight-pre"><span class="highlight-lineno">&nbsp;1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">int</span> renameCount = <span class="highlight-number">0</span>;
<span class="highlight-lineno">&nbsp;2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (ZipFile zip2 = ZipFile.Read(ExistingZipFile))
<span class="highlight-lineno">&nbsp;3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">&nbsp;4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>   <span class="highlight-keyword">foreach</span> (ZipEntry e <span class="highlight-keyword">in</span> zip2)
<span class="highlight-lineno">&nbsp;5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>   {
<span class="highlight-lineno">&nbsp;6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>     <span class="highlight-keyword">if</span> (e.FileName.EndsWith(<span class="highlight-literal">&quot;.txt&quot;</span>))
<span class="highlight-lineno">&nbsp;7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>     {
<span class="highlight-lineno">&nbsp;8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        var newname = <span class="highlight-literal">&quot;renamed_files\\&quot;</span> + e.FileName;
<span class="highlight-lineno">&nbsp;9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        e.FileName = newname;
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        e.Comment = <span class="highlight-literal">&quot;renamed&quot;</span>;
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        renameCount++;
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>     }
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>   }
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>   zip2.Comment = String.Format(<span class="highlight-literal">&quot;This archive has been modified. {0} files have been renamed.&quot;</span>, renameCount);
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>   zip2.Save();
<span class="highlight-lineno">17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>


<hr/>

<p>Extract all files from a zip archive:</p>
<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Extract 1</div><pre class="highlight-pre"><span class="highlight-lineno">1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (ZipFile zip = ZipFile.Read(ExistingZipFile))
<span class="highlight-lineno">2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-keyword">foreach</span> (ZipEntry e <span class="highlight-keyword">in</span> zip)
<span class="highlight-lineno">4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  {
<span class="highlight-lineno">5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    e.Extract(TargetDirectory);
<span class="highlight-lineno">6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  }
<span class="highlight-lineno">7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>


<hr/>

<p>The default behavior of extraction is to NOT overwrite existing
files. In this example, the app Extracts all files, and overwrites
existing files in the filesystem:</p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Extract 2</div><pre class="highlight-pre"><span class="highlight-lineno">1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (ZipFile zip = ZipFile.Read(ExistingZipFile))
<span class="highlight-lineno">2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-keyword">foreach</span> (ZipEntry e <span class="highlight-keyword">in</span> zip)
<span class="highlight-lineno">4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  {
<span class="highlight-lineno">5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    e.Extract(TargetDirectory, <span class="highlight-keyword">true</span>);  <span class="highlight-comment">// overwrite == true</span>
<span class="highlight-lineno">6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  }
<span class="highlight-lineno">7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>


<hr/>
<p>Extract an entry from the zip archive into a previously-opened stream:</p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Extract 3</div><pre class="highlight-pre"><span class="highlight-lineno">1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (ZipFile zip = ZipFile.Read(ExistingZipFile))
<span class="highlight-lineno">2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  ZipEntry e = zip[<span class="highlight-literal">&quot;MyReport.doc&quot;</span>];
<span class="highlight-lineno">4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  e.Extract(OutputStream);
<span class="highlight-lineno">5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>

<hr/>

<p>Extract an Entry that was encrypted with a password, into the
specified base directory:</p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Extract 4</div><pre class="highlight-pre"><span class="highlight-lineno">1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (ZipFile zip = ZipFile.Read(ExistingZipFile))
<span class="highlight-lineno">2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  ZipEntry e = zip[<span class="highlight-literal">&quot;TaxInformation-2008.xls&quot;</span>];
<span class="highlight-lineno">4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  e.ExtractWithPassword(BaseDirectory, Password);
<span class="highlight-lineno">5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>

<hr/>

<p>List all the entries in a zip file: </p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>List 1</div><pre class="highlight-pre"><span class="highlight-lineno">&nbsp;1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (ZipFile zip = ZipFile.Read(ExistingZipFile))
<span class="highlight-lineno">&nbsp;2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">&nbsp;3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-keyword">foreach</span> (ZipEntry e <span class="highlight-keyword">in</span> zip)
<span class="highlight-lineno">&nbsp;4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  {
<span class="highlight-lineno">&nbsp;5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">if</span> (header)
<span class="highlight-lineno">&nbsp;6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">&nbsp;7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>      System.Console.WriteLine(<span class="highlight-literal">&quot;Zipfile: {0}&quot;</span>, zip.Name);
<span class="highlight-lineno">&nbsp;8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>      <span class="highlight-keyword">if</span> ((zip.Comment != <span class="highlight-keyword">null</span>) &amp;&amp; (zip.Comment != <span class="highlight-literal">&quot;&quot;</span>))
<span class="highlight-lineno">&nbsp;9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        System.Console.WriteLine(<span class="highlight-literal">&quot;Comment: {0}&quot;</span>, zip.Comment);
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>      System.Console.WriteLine(<span class="highlight-literal">&quot;\n{1,-22} {2,8}  {3,5}   {4,8}  {5,3} {0}&quot;</span>,
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                               <span class="highlight-literal">&quot;Filename&quot;</span>, <span class="highlight-literal">&quot;Modified&quot;</span>, <span class="highlight-literal">&quot;Size&quot;</span>, <span class="highlight-literal">&quot;Ratio&quot;</span>, <span class="highlight-literal">&quot;Packed&quot;</span>, <span class="highlight-literal">&quot;pw?&quot;</span>);
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>      System.Console.WriteLine(<span class="highlight-keyword">new</span> System.String(<span class="highlight-literal">&#39;-&#39;</span>, <span class="highlight-number">72</span>));
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>      header = <span class="highlight-keyword">false</span>;
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    System.Console.WriteLine(<span class="highlight-literal">&quot;{1,-22} {2,8} {3,5:F0}%   {4,8}  {5,3} {0}&quot;</span>,
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                             e.FileName,
<span class="highlight-lineno">17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                             e.LastModified.ToString(<span class="highlight-literal">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>),
<span class="highlight-lineno">18</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                             e.UncompressedSize,
<span class="highlight-lineno">19</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                             e.CompressionRatio,
<span class="highlight-lineno">20</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                             e.CompressedSize,
<span class="highlight-lineno">21</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>                             (e.UsesEncryption) ? <span class="highlight-literal">&quot;Y&quot;</span> : <span class="highlight-literal">&quot;N&quot;</span>);
<span class="highlight-lineno">22</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">23</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  }
<span class="highlight-lineno">24</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>

<hr/>

<p>Read in zip archive content from a stream, and extract the content
for one entry to another stream. In this example, the filename
"NameOfEntryInArchive.doc", refers only to the name of the entry within
the zip archive. A file by that name is not created in the
filesystem. The I/O is done strictly with the given streams. </p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Stream 1</div><pre class="highlight-pre"><span class="highlight-lineno">1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (ZipFile zip = ZipFile.Read(InputStream))
<span class="highlight-lineno">2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Extract(<span class="highlight-literal">&quot;NameOfEntryInArchive.doc&quot;</span>, OutputStream);
<span class="highlight-lineno">4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>

<hr/>

<p>Create a zip dynamically within an ASP.NET postback method, then
download that zipfile to the requesting browser through
Response.OutputStream. This works in DotNetZip v1.5 and later.</p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>ASP.NET 1</div><pre class="highlight-pre"><span class="highlight-lineno">&nbsp;1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> btnGo_Click (Object sender, EventArgs e)
<span class="highlight-lineno">&nbsp;2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">&nbsp;3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  Response.Clear();
<span class="highlight-lineno">&nbsp;4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  String ReadmeText= <span class="highlight-literal">&quot;This is a zip file dynamically generated at &quot;</span> + System.DateTime.Now.ToString(<span class="highlight-literal">&quot;G&quot;</span>);
<span class="highlight-lineno">&nbsp;5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-keyword">string</span> filename = System.IO.Path.GetFileName(ListOfFiles.SelectedItem.Text) + <span class="highlight-literal">&quot;.zip&quot;</span>;
<span class="highlight-lineno">&nbsp;6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  Response.ContentType = <span class="highlight-literal">&quot;application/zip&quot;</span>;
<span class="highlight-lineno">&nbsp;7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  Response.AddHeader(<span class="highlight-literal">&quot;content-disposition&quot;</span>, <span class="highlight-literal">&quot;filename=&quot;</span> + filename);
<span class="highlight-lineno">&nbsp;8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-keyword">using</span> (ZipFile zip = <span class="highlight-keyword">new</span> ZipFile())
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  {
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    zip.AddFile(ListOfFiles.SelectedItem.Text, <span class="highlight-literal">&quot;files&quot;</span>);
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    zip.AddStringAsFile(ReadmeText, <span class="highlight-literal">&quot;Readme.txt&quot;</span>, <span class="highlight-literal">&quot;&quot;</span>);
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    zip.Save(Response.OutputStream);
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  }
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  Response.End();
<span class="highlight-lineno">17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>

<hr/>
<p>Create a zip with a single entry, obtaining the content for that entry
from a string.   Attach a comment to that entry.  Specify the name of the zip file at the time of
save. </p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Content from String</div><pre class="highlight-pre"><span class="highlight-lineno">1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">string</span> content = <span class="highlight-literal">&quot;......whatever....&quot;</span>;
<span class="highlight-lineno">2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (ZipFile zip = <span class="highlight-keyword">new</span> ZipFile())
<span class="highlight-lineno">3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  ZipEntry e = zip.AddEntry(<span class="highlight-literal">&quot;README.txt&quot;</span>, content);
<span class="highlight-lineno">5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  e.Comment = <span class="highlight-literal">&quot;This entry in the zip archive was created from a string.&quot;</span>;
<span class="highlight-lineno">6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Save(<span class="highlight-literal">&quot;archive-2008july12.zip&quot;</span>);
<span class="highlight-lineno">7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>

<hr/>

<p>Open an existing zip archive and modify it: update one entry,
remove another, and rename a third. Update the comment on the archive as well.</p>

<div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>Update a Zip</div><pre class="highlight-pre"><span class="highlight-lineno">&nbsp;1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> (ZipFile zip = ZipFile.Read(<span class="highlight-literal">&quot;ExistingArchive.zip&quot;</span>))
<span class="highlight-lineno">&nbsp;2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">&nbsp;3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  ZipEntry e = zip[<span class="highlight-literal">&quot;README.txt&quot;</span>];
<span class="highlight-lineno">&nbsp;4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  e.RemoveEntry();
<span class="highlight-lineno">&nbsp;5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-comment">// for this entry, update the archive  with content from the filesystem</span>
<span class="highlight-lineno">&nbsp;7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.UpdateItem(<span class="highlight-literal">&quot;Portfolio.doc&quot;</span>);
<span class="highlight-lineno">&nbsp;8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">&nbsp;9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-comment">// update the filename of an entry</span>
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  e = zip[<span class="highlight-literal">&quot;Table1.jpg&quot;</span>];
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  e.FileName = <span class="highlight-literal">&quot;Figure1.jpg&quot;</span>;
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Comment = <span class="highlight-literal">&quot;This zip archive was updated &quot;</span> + System.DateTime.ToString(<span class="highlight-literal">&quot;G&quot;</span>);
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  zip.Save();
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre>

</body>
</html>
