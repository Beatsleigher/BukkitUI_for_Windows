<?xml version="1.0" encoding="utf-8"?><html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns="http://www.w3.org/1999/xhtml"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><title>ZipError Event</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><meta name="file" content="df17bd70-71d9-0fca-a58d-b41455523c86" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="E:Ionic.Zip.ZipFile.ZipError" /><MSHelp:Keyword Index="A" Term="E:Ionic.Zip.ZipFile.ZipError" /><MSHelp:Keyword Index="A" Term="frlrfIonicZipZipFileClassZipErrorTopic" /><MSHelp:Keyword Index="K" Term="ZipError event" /><MSHelp:Keyword Index="K" Term="ZipFile.ZipError event" /><MSHelp:Keyword Index="F" Term="ZipError" /><MSHelp:Keyword Index="F" Term="ZipFile.ZipError" /><MSHelp:Keyword Index="F" Term="Ionic.Zip.ZipFile.ZipError" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="Ionic.Zip.dll" /><MSHelp:Attr Name="APIName" Value="Ionic.Zip.ZipFile.ZipError" /><MSHelp:Attr Name="APIName" Value="Ionic.Zip.ZipFile.add_ZipError" /><MSHelp:Attr Name="APIName" Value="Ionic.Zip.ZipFile.remove_ZipError" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="An event that is raised when an error occurs during open or read of files while saving a zip archive." /></xml><link type="text/css" rel="stylesheet" /><script type="text/javascript"></script><meta name="SelfBranded" content="true" /><meta name="ContentType" content="Reference" /><meta name="Microsoft.Help.TopicVersion" content="100" /><meta name="Microsoft.Help.Keywords" content="ZipError event" /><meta name="Microsoft.Help.Keywords" content="ZipFile.ZipError event" /><meta name="Microsoft.Help.F1" content="ZipError" /><meta name="Microsoft.Help.F1" content="ZipFile.ZipError" /><meta name="Microsoft.Help.F1" content="Ionic.Zip.ZipFile.ZipError" /><meta name="Description" content="An event that is raised when an error occurs during open or read of files while saving a zip archive." /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><meta name="Microsoft.Help.Id" content="E:Ionic.Zip.ZipFile.ZipError" /><meta name="Microsoft.Help.TocParent" content="T:Ionic.Zip.ZipFile" /><meta name="Microsoft.Help.TOCParentTopicVersion" content="100" /><meta name="Microsoft.Help.TocOrder" content="78" /></head><body><div id="control"><span class="productTitle">Ionic Zip Library v1.9.1.6</span><br /><span class="topicTitle">ZipError Event</span><br /><div id="toolbar"><span id="chickenFeet"><a href="ms-xhelp://?Id=R:Project">Reference</a> ► <a href="ms-xhelp://?Id=N:Ionic.Zip">Ionic.Zip</a> ► <a href="ms-xhelp://?Id=T:Ionic.Zip.ZipFile">ZipFile</a> ► <span class="selflink">ZipError</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs" /><option value="VisualBasic vb" /><option value="ManagedCPlusPlus cpp" /></select></span></div></div><div id="main"><span style="color: DarkGray"></span><div class="summary">
             An event that is raised when an error occurs during open or read of files
             while saving a zip archive.
             </div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');" /><td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');" /><td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');" /></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre xml:space="preserve">
<span class="keyword">public</span> event <a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="ms-xhelp://?Id=T:Ionic.Zip.ZipErrorEventArgs">ZipErrorEventArgs</a>&gt; <span class="identifier">ZipError</span></pre></div><div class="code" x-lang="VisualBasic"><pre xml:space="preserve">
<span class="keyword">Public</span> Event <span class="identifier">ZipError</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>(<span class="keyword">Of</span> <a href="ms-xhelp://?Id=T:Ionic.Zip.ZipErrorEventArgs">ZipErrorEventArgs</a>)</pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre xml:space="preserve">
<span class="keyword">public</span>:
 <span class="keyword">event</span> <a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="ms-xhelp://?Id=T:Ionic.Zip.ZipErrorEventArgs">ZipErrorEventArgs</a>^&gt;^ <span class="identifier">ZipError</span> {
	<span class="keyword">void</span> <span class="keyword">add</span> (<a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="ms-xhelp://?Id=T:Ionic.Zip.ZipErrorEventArgs">ZipErrorEventArgs</a>^&gt;^ <span class="parameter">value</span>);
	<span class="keyword">void</span> <span class="keyword">remove</span> (<a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="ms-xhelp://?Id=T:Ionic.Zip.ZipErrorEventArgs">ZipErrorEventArgs</a>^&gt;^ <span class="parameter">value</span>);
}</pre></div></div></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> Remarks</div><div class="sectionContent"><p>
                 Errors can occur as a file is being saved to the zip archive.  For
                 example, the File.Open may fail, or a File.Read may fail, because of
                 lock conflicts or other reasons.  If you add a handler to this event,
                 you can handle such errors in your own code.  If you don't add a
                 handler, the library will throw an exception if it encounters an I/O
                 error during a call to <span class="code">Save()</span>.
              </p><p>
                Setting a handler implicitly sets <a href="ms-xhelp://?Id=P:Ionic.Zip.ZipFile.ZipErrorAction">ZipErrorAction</a> to
                <span class="code">ZipErrorAction.InvokeErrorEvent</span>.
              </p><p>
                The handler you add applies to all <a href="ms-xhelp://?Id=T:Ionic.Zip.ZipEntry">ZipEntry</a> items that are
                subsequently added to the <span class="code">ZipFile</span> instance. If you set this
                property after you have added items to the <span class="code">ZipFile</span>, but before you
                have called <span class="code">Save()</span>, errors that occur while saving those items
                will not cause the error handler to be invoked.
              </p><p>
                If you want to handle any errors that occur with any entry in the zip
                file using the same error handler, then add your error handler once,
                before adding any entries to the zip archive.
              </p><p>
                In the error handler method, you need to set the <a href="ms-xhelp://?Id=P:Ionic.Zip.ZipEntry.ZipErrorAction">ZipErrorAction</a> property on the
                <span class="code">ZipErrorEventArgs.CurrentEntry</span>.  This communicates back to
                DotNetZip what you would like to do with this particular error.  Within
                an error handler, if you set the <span class="code">ZipEntry.ZipErrorAction</span> property
                on the <span class="code">ZipEntry</span> to <span class="code">ZipErrorAction.InvokeErrorEvent</span> or if
                you don't set it at all, the library will throw the exception. (It is the
                same as if you had set the <span class="code">ZipEntry.ZipErrorAction</span> property on the
                <span class="code">ZipEntry</span> to <span class="code">ZipErrorAction.Throw</span>.) If you set the
                <span class="code">ZipErrorEventArgs.Cancel</span> to true, the entire <span class="code">Save()</span> will be
                canceled.
              </p><p>
                In the case that you use <span class="code">ZipErrorAction.Skip</span>, implying that
                you want to skip the entry for which there's been an error, DotNetZip
                tries to seek backwards in the output stream, and truncate all bytes
                written on behalf of that particular entry. This works only if the
                output stream is seekable.  It will not work, for example, when using
                ASPNET's Response.OutputStream.
              </p></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> Examples</div><div class="sectionContent">
            
             This example shows how to use an event handler to handle
             errors during save of the zip file.
             <span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> MyZipError(<span class="highlight-keyword">object</span> sender, ZipErrorEventArgs e)
{
    Console.WriteLine(<span class="highlight-literal">"Error saving {0}..."</span>, e.FileName);
    Console.WriteLine(<span class="highlight-literal">"   Exception: {0}"</span>, e.exception);
    ZipEntry entry = e.CurrentEntry;
    <span class="highlight-keyword">string</span> response = <span class="highlight-keyword">null</span>;
    <span class="highlight-comment">// Ask the user whether he wants to skip this error or not</span>
    <span class="highlight-keyword">do</span>
    {
        Console.Write(<span class="highlight-literal">"Retry, Skip, Throw, or Cancel ? (R/S/T/C) "</span>);
        response = Console.ReadLine();
        Console.WriteLine();

    } <span class="highlight-keyword">while</span> (response != <span class="highlight-keyword">null</span> &amp;&amp;
             response[<span class="highlight-number">0</span>]!=<span class="highlight-literal">'S'</span> &amp;&amp; response[<span class="highlight-number">0</span>]!=<span class="highlight-literal">'s'</span> &amp;&amp;
             response[<span class="highlight-number">0</span>]!=<span class="highlight-literal">'R'</span> &amp;&amp; response[<span class="highlight-number">0</span>]!=<span class="highlight-literal">'r'</span> &amp;&amp;
             response[<span class="highlight-number">0</span>]!=<span class="highlight-literal">'T'</span> &amp;&amp; response[<span class="highlight-number">0</span>]!=<span class="highlight-literal">'t'</span> &amp;&amp;
             response[<span class="highlight-number">0</span>]!=<span class="highlight-literal">'C'</span> &amp;&amp; response[<span class="highlight-number">0</span>]!=<span class="highlight-literal">'c'</span>);

    e.Cancel = (response[<span class="highlight-number">0</span>]==<span class="highlight-literal">'C'</span> || response[<span class="highlight-number">0</span>]==<span class="highlight-literal">'c'</span>);

    <span class="highlight-keyword">if</span> (response[<span class="highlight-number">0</span>]==<span class="highlight-literal">'S'</span> || response[<span class="highlight-number">0</span>]==<span class="highlight-literal">'s'</span>)
        entry.ZipErrorAction = ZipErrorAction.Skip;
    <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (response[<span class="highlight-number">0</span>]==<span class="highlight-literal">'R'</span> || response[<span class="highlight-number">0</span>]==<span class="highlight-literal">'r'</span>)
        entry.ZipErrorAction = ZipErrorAction.Retry;
    <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (response[<span class="highlight-number">0</span>]==<span class="highlight-literal">'T'</span> || response[<span class="highlight-number">0</span>]==<span class="highlight-literal">'t'</span>)
        entry.ZipErrorAction = ZipErrorAction.Throw;
}

<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> SaveTheFile()
{
  <span class="highlight-keyword">string</span> directoryToZip = <span class="highlight-literal">"fodder"</span>;
  <span class="highlight-keyword">string</span> directoryInArchive = <span class="highlight-literal">"files"</span>;
  <span class="highlight-keyword">string</span> zipFileToCreate = <span class="highlight-literal">"Archive.zip"</span>;
  <span class="highlight-keyword">using</span> (var zip = <span class="highlight-keyword">new</span> ZipFile())
  {
    <span class="highlight-comment">// set the event handler before adding any entries</span>
    zip.ZipError += MyZipError;
    zip.AddDirectory(directoryToZip, directoryInArchive);
    zip.Save(zipFileToCreate);
  }
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> MyZipError(<span class="highlight-keyword">ByVal</span> sender <span class="highlight-keyword">As</span> <span class="highlight-keyword">Object</span>, <span class="highlight-keyword">ByVal</span> e <span class="highlight-keyword">As</span> Ionic.Zip.ZipErrorEventArgs)
    <span class="highlight-comment">' At this point, the application could prompt the user for an action to take.</span>
    <span class="highlight-comment">' But in this case, this application will simply automatically skip the file, in case of error.</span>
    Console.WriteLine(<span class="highlight-literal">"Zip Error,  entry {0}"</span>, e.CurrentEntry.FileName)
    Console.WriteLine(<span class="highlight-literal">"   Exception: {0}"</span>, e.exception)
    <span class="highlight-comment">' set the desired ZipErrorAction on the CurrentEntry to communicate that to DotNetZip</span>
    e.CurrentEntry.ZipErrorAction = Zip.ZipErrorAction.Skip
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> SaveTheFile()
    <span class="highlight-keyword">Dim</span> directoryToZip <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"fodder"</span>
    <span class="highlight-keyword">Dim</span> directoryInArchive <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"files"</span>
    <span class="highlight-keyword">Dim</span> zipFileToCreate <span class="highlight-keyword">as</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"Archive.zip"</span>
    <span class="highlight-keyword">Using</span> zipArchive <span class="highlight-keyword">As</span> ZipFile = <span class="highlight-keyword">New</span> ZipFile
        <span class="highlight-comment">' set the event handler before adding any entries</span>
        <span class="highlight-keyword">AddHandler</span> zipArchive.ZipError, <span class="highlight-keyword">AddressOf</span> MyZipError
        zipArchive.AddDirectory(directoryToZip, directoryInArchive)
        zipArchive.Save(zipFileToCreate)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div></span></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> See Also</div><div class="sectionContent"><a href="ms-xhelp://?Id=P:Ionic.Zip.ZipFile.ZipErrorAction">ZipErrorAction</a><br /></div></div><p><div id="footer"><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:dpchiesa%40hotmail.com?Subject=Ionic Zip Library v1.9.1.6">dpchiesa@hotmail.com</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script><p />Copyright 2009-2011, Dino Chiesa</div>Assembly: <span sdata="assembly">Ionic.Zip</span> (Module: Ionic.Zip) Version: 1.9.1.8 (1.9.1.8)</p></div></body></html>