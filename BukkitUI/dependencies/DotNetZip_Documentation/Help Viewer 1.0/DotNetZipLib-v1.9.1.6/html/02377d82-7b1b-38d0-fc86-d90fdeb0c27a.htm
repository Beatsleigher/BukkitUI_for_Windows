<?xml version="1.0" encoding="utf-8"?><html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns="http://www.w3.org/1999/xhtml"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><title>Deflate Method (flush)</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><meta name="file" content="02377d82-7b1b-38d0-fc86-d90fdeb0c27a" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="M:Ionic.Zlib.ZlibCodec.Deflate(Ionic.Zlib.FlushType)" /><MSHelp:Keyword Index="A" Term="M:Ionic.Zlib.ZlibCodec.Deflate(Ionic.Zlib.FlushType)" /><MSHelp:Keyword Index="A" Term="frlrfIonicZlibZlibCodecClassDeflateTopic" /><MSHelp:Keyword Index="K" Term="Deflate method" /><MSHelp:Keyword Index="K" Term="ZlibCodec.Deflate method" /><MSHelp:Keyword Index="F" Term="Deflate" /><MSHelp:Keyword Index="F" Term="ZlibCodec.Deflate" /><MSHelp:Keyword Index="F" Term="Ionic.Zlib.ZlibCodec.Deflate" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="Ionic.Zip.dll" /><MSHelp:Attr Name="APIName" Value="Ionic.Zlib.ZlibCodec.Deflate" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="Deflate one batch of data." /></xml><link type="text/css" rel="stylesheet" /><script type="text/javascript"></script><meta name="SelfBranded" content="true" /><meta name="ContentType" content="Reference" /><meta name="Microsoft.Help.TopicVersion" content="100" /><meta name="Microsoft.Help.Keywords" content="Deflate method" /><meta name="Microsoft.Help.Keywords" content="ZlibCodec.Deflate method" /><meta name="Microsoft.Help.F1" content="Deflate" /><meta name="Microsoft.Help.F1" content="ZlibCodec.Deflate" /><meta name="Microsoft.Help.F1" content="Ionic.Zlib.ZlibCodec.Deflate" /><meta name="Description" content="Deflate one batch of data." /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Ionic.Zlib.ZlibCodec.Deflate(Ionic.Zlib.FlushType)" /><meta name="Microsoft.Help.TocParent" content="T:Ionic.Zlib.ZlibCodec" /><meta name="Microsoft.Help.TOCParentTopicVersion" content="100" /><meta name="Microsoft.Help.TocOrder" content="5" /></head><body><div id="control"><span class="productTitle">Ionic Zip Library v1.9.1.6</span><br /><span class="topicTitle">Deflate Method (flush)</span><br /><div id="toolbar"><span id="chickenFeet"><a href="ms-xhelp://?Id=R:Project">Reference</a> ► <a href="ms-xhelp://?Id=N:Ionic.Zlib">Ionic.Zlib</a> ► <a href="ms-xhelp://?Id=T:Ionic.Zlib.ZlibCodec">ZlibCodec</a> ► <span class="selflink">Deflate(FlushType)</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs" /><option value="VisualBasic vb" /><option value="ManagedCPlusPlus cpp" /></select></span></div></div><div id="main"><span style="color: DarkGray"></span><div class="summary">
            Deflate one batch of data.
            </div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');" /><td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');" /><td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');" /></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre xml:space="preserve">
<span class="keyword">public</span> <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">int</a> <span class="identifier">Deflate</span>(
	<a href="ms-xhelp://?Id=T:Ionic.Zlib.FlushType">FlushType</a> <span class="parameter">flush</span>
)</pre></div><div class="code" x-lang="VisualBasic"><pre xml:space="preserve">
<span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">Deflate</span> ( _
	<span class="parameter">flush</span> <span class="keyword">As</span> <a href="ms-xhelp://?Id=T:Ionic.Zlib.FlushType">FlushType</a> _
) <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">Integer</a></pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre xml:space="preserve">
<span class="keyword">public</span>:
<a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">int</a> <span class="identifier">Deflate</span>(
	<a href="ms-xhelp://?Id=T:Ionic.Zlib.FlushType">FlushType</a> <span class="parameter">flush</span>
)</pre></div></div></div></div></div><div id="parameters"><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> Parameters</div><div class="sectionContent"><dl paramName="flush"><dt><span class="parameter">flush</span> (<a href="ms-xhelp://?Id=T:Ionic.Zlib.FlushType">FlushType</a>)</dt><dd>whether to flush all data as you deflate. Generally you will want to 
            use Z_NO_FLUSH here, in a series of calls to Deflate(), and then call EndDeflate() to 
            flush everything. 
            </dd></dl></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> Return Value</div><div class="sectionContent">Z_OK if all goes well.</div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> Remarks</div><div class="sectionContent">
            You must have set InputBuffer and OutputBuffer before calling this method.
            </div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> Examples</div><div class="sectionContent"><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> DeflateBuffer(CompressionLevel level)
{
    <span class="highlight-keyword">int</span> bufferSize = <span class="highlight-number">1024</span>;
    <span class="highlight-keyword">byte</span>[] buffer = <span class="highlight-keyword">new</span> <span class="highlight-keyword">byte</span>[bufferSize];
    ZlibCodec compressor = <span class="highlight-keyword">new</span> ZlibCodec();

    Console.WriteLine(<span class="highlight-literal">"\n============================================"</span>);
    Console.WriteLine(<span class="highlight-literal">"Size of Buffer to Deflate: {0} bytes."</span>, UncompressedBytes.Length);
    MemoryStream ms = <span class="highlight-keyword">new</span> MemoryStream();

    <span class="highlight-keyword">int</span> rc = compressor.InitializeDeflate(level);

    compressor.InputBuffer = UncompressedBytes;
    compressor.NextIn = <span class="highlight-number">0</span>;
    compressor.AvailableBytesIn = UncompressedBytes.Length;

    compressor.OutputBuffer = buffer;

    <span class="highlight-comment">// pass 1: deflate </span>
    <span class="highlight-keyword">do</span>
    {
        compressor.NextOut = <span class="highlight-number">0</span>;
        compressor.AvailableBytesOut = buffer.Length;
        rc = compressor.Deflate(FlushType.None);

        <span class="highlight-keyword">if</span> (rc != ZlibConstants.Z_OK &amp;&amp; rc != ZlibConstants.Z_STREAM_END)
            <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> Exception(<span class="highlight-literal">"deflating: "</span> + compressor.Message);

        ms.Write(compressor.OutputBuffer, <span class="highlight-number">0</span>, buffer.Length - compressor.AvailableBytesOut);
    }
    <span class="highlight-keyword">while</span> (compressor.AvailableBytesIn &gt; <span class="highlight-number">0</span> || compressor.AvailableBytesOut == <span class="highlight-number">0</span>);

    <span class="highlight-comment">// pass 2: finish and flush</span>
    <span class="highlight-keyword">do</span>
    {
        compressor.NextOut = <span class="highlight-number">0</span>;
        compressor.AvailableBytesOut = buffer.Length;
        rc = compressor.Deflate(FlushType.Finish);

        <span class="highlight-keyword">if</span> (rc != ZlibConstants.Z_STREAM_END &amp;&amp; rc != ZlibConstants.Z_OK)
            <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> Exception(<span class="highlight-literal">"deflating: "</span> + compressor.Message);

        <span class="highlight-keyword">if</span> (buffer.Length - compressor.AvailableBytesOut &gt; <span class="highlight-number">0</span>)
            ms.Write(buffer, <span class="highlight-number">0</span>, buffer.Length - compressor.AvailableBytesOut);
    }
    <span class="highlight-keyword">while</span> (compressor.AvailableBytesIn &gt; <span class="highlight-number">0</span> || compressor.AvailableBytesOut == <span class="highlight-number">0</span>);

    compressor.EndDeflate();

    ms.Seek(<span class="highlight-number">0</span>, SeekOrigin.Begin);
    CompressedBytes = <span class="highlight-keyword">new</span> <span class="highlight-keyword">byte</span>[compressor.TotalBytesOut];
    ms.Read(CompressedBytes, <span class="highlight-number">0</span>, CompressedBytes.Length);
}</pre></div></span></div></div><p><div id="footer"><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:dpchiesa%40hotmail.com?Subject=Ionic Zip Library v1.9.1.6">dpchiesa@hotmail.com</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script><p />Copyright 2009-2011, Dino Chiesa</div>Assembly: <span sdata="assembly">Ionic.Zip</span> (Module: Ionic.Zip) Version: 1.9.1.8 (1.9.1.8)</p></div></body></html>