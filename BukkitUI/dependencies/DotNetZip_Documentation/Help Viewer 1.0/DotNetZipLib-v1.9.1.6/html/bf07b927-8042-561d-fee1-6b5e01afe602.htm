<?xml version="1.0" encoding="utf-8"?><html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns="http://www.w3.org/1999/xhtml"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><title>ExtractAll Method (path)</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><meta name="file" content="bf07b927-8042-561d-fee1-6b5e01afe602" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="M:Ionic.Zip.ZipFile.ExtractAll(System.String)" /><MSHelp:Keyword Index="A" Term="M:Ionic.Zip.ZipFile.ExtractAll(System.String)" /><MSHelp:Keyword Index="A" Term="frlrfIonicZipZipFileClassExtractAllTopic" /><MSHelp:Keyword Index="K" Term="ExtractAll method" /><MSHelp:Keyword Index="K" Term="ZipFile.ExtractAll method" /><MSHelp:Keyword Index="F" Term="ExtractAll" /><MSHelp:Keyword Index="F" Term="ZipFile.ExtractAll" /><MSHelp:Keyword Index="F" Term="Ionic.Zip.ZipFile.ExtractAll" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="Ionic.Zip.dll" /><MSHelp:Attr Name="APIName" Value="Ionic.Zip.ZipFile.ExtractAll" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="Extracts all of the items in the zip archive, to the specified path in the filesystem. The path can be relative or fully-qualified." /></xml><link type="text/css" rel="stylesheet" /><script type="text/javascript"></script><meta name="SelfBranded" content="true" /><meta name="ContentType" content="Reference" /><meta name="Microsoft.Help.TopicVersion" content="100" /><meta name="Microsoft.Help.Keywords" content="ExtractAll method" /><meta name="Microsoft.Help.Keywords" content="ZipFile.ExtractAll method" /><meta name="Microsoft.Help.F1" content="ExtractAll" /><meta name="Microsoft.Help.F1" content="ZipFile.ExtractAll" /><meta name="Microsoft.Help.F1" content="Ionic.Zip.ZipFile.ExtractAll" /><meta name="Description" content="Extracts all of the items in the zip archive, to the specified path in the filesystem. The path can be relative or fully-qualified." /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Ionic.Zip.ZipFile.ExtractAll(System.String)" /><meta name="Microsoft.Help.TocParent" content="M:Ionic.Zip.ZipFile.ExtractAll(System.String)" /><meta name="Microsoft.Help.TOCParentTopicVersion" content="100" /><meta name="Microsoft.Help.TocOrder" content="0" /></head><body><div id="control"><span class="productTitle">Ionic Zip Library v1.9.1.6</span><br /><span class="topicTitle">ExtractAll Method (path)</span><br /><div id="toolbar"><span id="chickenFeet"><a href="ms-xhelp://?Id=R:Project">Reference</a> ► <a href="ms-xhelp://?Id=N:Ionic.Zip">Ionic.Zip</a> ► <a href="ms-xhelp://?Id=T:Ionic.Zip.ZipFile">ZipFile</a> ► <span class="selflink">ExtractAll(String)</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs" /><option value="VisualBasic vb" /><option value="ManagedCPlusPlus cpp" /></select></span></div></div><div id="main"><span style="color: DarkGray"></span><div class="summary">
             Extracts all of the items in the zip archive, to the specified path in the
             filesystem.  The path can be relative or fully-qualified.
             </div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');" /><td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');" /><td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');" /></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre xml:space="preserve">
<span class="keyword">public</span> <span class="keyword">void</span> <span class="identifier">ExtractAll</span>(
	<a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">string</a> <span class="parameter">path</span>
)</pre></div><div class="code" x-lang="VisualBasic"><pre xml:space="preserve">
<span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">ExtractAll</span> ( _
	<span class="parameter">path</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">String</a> _
)</pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre xml:space="preserve">
<span class="keyword">public</span>:
<span class="keyword">void</span> <span class="identifier">ExtractAll</span>(
	<a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">String</a>^ <span class="parameter">path</span>
)</pre></div></div></div></div></div><div id="parameters"><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> Parameters</div><div class="sectionContent"><dl paramName="path"><dt><span class="parameter">path</span> (<a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">String</a>)</dt><dd>
               The path to which the contents of the zipfile will be extracted.
               The path can be relative or fully-qualified.
             </dd></dl></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> Remarks</div><div class="sectionContent"><p>
               This method will extract all entries in the <span class="code">ZipFile</span> to the
               specified path.
             </p><p>
               If an extraction of a file from the zip archive would overwrite an
               existing file in the filesystem, the action taken is dictated by the
               ExtractExistingFile property, which overrides any setting you may have
               made on individual ZipEntry instances.  By default, if you have not
               set that property on the <span class="code">ZipFile</span> instance, the entry will not
               be extracted, the existing file will not be overwritten and an
               exception will be thrown. To change this, set the property, or use the
               <a href="ms-xhelp://?Id=M:Ionic.Zip.ZipFile.ExtractAll(System.String,Ionic.Zip.ExtractExistingFileAction)">ExtractAll(String, ExtractExistingFileAction)</a> overload that allows you to
               specify an ExtractExistingFileAction parameter.
             </p><p>
               The action to take when an extract would overwrite an existing file
               applies to all entries.  If you want to set this on a per-entry basis,
               then you must use one of the <a href="ms-xhelp://?Id=M:Ionic.Zip.ZipEntry.Extract">ZipEntry.Extract</a> methods.
             </p><p>
               This method will send verbose output messages to the <a href="ms-xhelp://?Id=P:Ionic.Zip.ZipFile.StatusMessageTextWriter">StatusMessageTextWriter</a>, if it is set on the <span class="code">ZipFile</span>
               instance.
             </p><p>
             You may wish to take advantage of the <span class="code">ExtractProgress</span> event.
             </p><p>
               About timestamps: When extracting a file entry from a zip archive, the
               extracted file gets the last modified time of the entry as stored in
               the archive. The archive may also store extended file timestamp
               information, including last accessed and created times. If these are
               present in the <span class="code">ZipEntry</span>, then the extracted file will also get
               these times.
             </p><p>
               A Directory entry is somewhat different. It will get the times as
               described for a file entry, but, if there are file entries in the zip
               archive that, when extracted, appear in the just-created directory,
               then when those file entries are extracted, the last modified and last
               accessed times of the directory will change, as a side effect.  The
               result is that after an extraction of a directory and a number of
               files within the directory, the last modified and last accessed
               timestamps on the directory will reflect the time that the last file
               was extracted into the directory, rather than the time stored in the
               zip archive for the directory.
             </p><p>
               To compensate, when extracting an archive with <span class="code">ExtractAll</span>,
               DotNetZip will extract all the file and directory entries as described
               above, but it will then make a second pass on the directories, and
               reset the times on the directories to reflect what is stored in the
               zip archive.
             </p><p>
               This compensation is performed only within the context of an
               <span class="code">ExtractAll</span>. If you call <span class="code">ZipEntry.Extract</span> on a directory
               entry, the timestamps on directory in the filesystem will reflect the
               times stored in the zip.  If you then call <span class="code">ZipEntry.Extract</span> on
               a file entry, which is extracted into the directory, the timestamps on
               the directory will be updated to the current time.
             </p></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> Examples</div><div class="sectionContent">
               This example extracts all the entries in a zip archive file, to the
               specified target directory.  The extraction will overwrite any
               existing files silently.
            
             <span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" />Copy</span>C#</div><div class="code"><pre xml:space="preserve">String TargetDirectory= <span class="highlight-literal">"unpack"</span>;
<span class="highlight-keyword">using</span>(ZipFile zip= ZipFile.Read(ZipFileToExtract))
{
    zip.ExtractExistingFile= ExtractExistingFileAction.OverwriteSilently;
    zip.ExtractAll(TargetDirectory);
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Dim</span> TargetDirectory <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"unpack"</span>
<span class="highlight-keyword">Using</span> zip <span class="highlight-keyword">As</span> ZipFile = ZipFile.Read(ZipFileToExtract)
    zip.ExtractExistingFile= ExtractExistingFileAction.OverwriteSilently
    zip.ExtractAll(TargetDirectory)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span></pre></div></span></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> See Also</div><div class="sectionContent"><a href="ms-xhelp://?Id=E:Ionic.Zip.ZipFile.ExtractProgress">ExtractProgress</a><br /><a href="ms-xhelp://?Id=P:Ionic.Zip.ZipFile.ExtractExistingFile">ExtractExistingFile</a><br /></div></div><p><div id="footer"><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:dpchiesa%40hotmail.com?Subject=Ionic Zip Library v1.9.1.6">dpchiesa@hotmail.com</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script><p />Copyright 2009-2011, Dino Chiesa</div>Assembly: <span sdata="assembly">Ionic.Zip</span> (Module: Ionic.Zip) Version: 1.9.1.8 (1.9.1.8)</p></div></body></html>