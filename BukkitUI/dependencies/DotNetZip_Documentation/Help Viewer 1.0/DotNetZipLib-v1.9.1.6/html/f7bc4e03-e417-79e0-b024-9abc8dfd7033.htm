<?xml version="1.0" encoding="utf-8"?><html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns="http://www.w3.org/1999/xhtml"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><title>Encryption Property </title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><meta name="file" content="f7bc4e03-e417-79e0-b024-9abc8dfd7033" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="P:Ionic.Zip.ZipEntry.Encryption" /><MSHelp:Keyword Index="A" Term="P:Ionic.Zip.ZipEntry.Encryption" /><MSHelp:Keyword Index="A" Term="frlrfIonicZipZipEntryClassEncryptionTopic" /><MSHelp:Keyword Index="K" Term="Encryption property" /><MSHelp:Keyword Index="K" Term="ZipEntry.Encryption property" /><MSHelp:Keyword Index="F" Term="Encryption" /><MSHelp:Keyword Index="F" Term="ZipEntry.Encryption" /><MSHelp:Keyword Index="F" Term="Ionic.Zip.ZipEntry.Encryption" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="Ionic.Zip.dll" /><MSHelp:Attr Name="APIName" Value="Ionic.Zip.ZipEntry.Encryption" /><MSHelp:Attr Name="APIName" Value="Ionic.Zip.ZipEntry.get_Encryption" /><MSHelp:Attr Name="APIName" Value="Ionic.Zip.ZipEntry.set_Encryption" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="Set this to specify which encryption algorithm to use for the entry when saving it to a zip archive." /></xml><link type="text/css" rel="stylesheet" /><script type="text/javascript"></script><meta name="SelfBranded" content="true" /><meta name="ContentType" content="Reference" /><meta name="Microsoft.Help.TopicVersion" content="100" /><meta name="Microsoft.Help.Keywords" content="Encryption property" /><meta name="Microsoft.Help.Keywords" content="ZipEntry.Encryption property" /><meta name="Microsoft.Help.F1" content="Encryption" /><meta name="Microsoft.Help.F1" content="ZipEntry.Encryption" /><meta name="Microsoft.Help.F1" content="Ionic.Zip.ZipEntry.Encryption" /><meta name="Description" content="Set this to specify which encryption algorithm to use for the entry when saving it to a zip archive." /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><meta name="Microsoft.Help.Id" content="P:Ionic.Zip.ZipEntry.Encryption" /><meta name="Microsoft.Help.TocParent" content="T:Ionic.Zip.ZipEntry" /><meta name="Microsoft.Help.TOCParentTopicVersion" content="100" /><meta name="Microsoft.Help.TocOrder" content="15" /></head><body><div id="control"><span class="productTitle">Ionic Zip Library v1.9.1.6</span><br /><span class="topicTitle">Encryption Property </span><br /><div id="toolbar"><span id="chickenFeet"><a href="ms-xhelp://?Id=R:Project">Reference</a> ► <a href="ms-xhelp://?Id=N:Ionic.Zip">Ionic.Zip</a> ► <a href="ms-xhelp://?Id=T:Ionic.Zip.ZipEntry">ZipEntry</a> ► <span class="selflink">Encryption</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs" /><option value="VisualBasic vb" /><option value="ManagedCPlusPlus cpp" /></select></span></div></div><div id="main"><span style="color: DarkGray"></span><div class="summary">
               Set this to specify which encryption algorithm to use for the entry when
               saving it to a zip archive.
             </div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');" /><td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');" /><td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');" /></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre xml:space="preserve">
<span class="keyword">public</span> <a href="ms-xhelp://?Id=T:Ionic.Zip.EncryptionAlgorithm">EncryptionAlgorithm</a> <span class="identifier">Encryption</span> { <span class="keyword">get</span>; <span class="keyword">set</span>; }</pre></div><div class="code" x-lang="VisualBasic"><pre xml:space="preserve">
<span class="keyword">Public</span> <span class="keyword">Property</span> <span class="identifier">Encryption</span> <span class="keyword">As</span> <a href="ms-xhelp://?Id=T:Ionic.Zip.EncryptionAlgorithm">EncryptionAlgorithm</a>
	<span class="keyword">Get</span>
	<span class="keyword">Set</span></pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre xml:space="preserve">
<span class="keyword">public</span>:
<span class="keyword">property</span> <a href="ms-xhelp://?Id=T:Ionic.Zip.EncryptionAlgorithm">EncryptionAlgorithm</a> <span class="identifier">Encryption</span> {
	<a href="ms-xhelp://?Id=T:Ionic.Zip.EncryptionAlgorithm">EncryptionAlgorithm</a> <span class="keyword">get</span> ();
	<span class="keyword">void</span> <span class="keyword">set</span> (<a href="ms-xhelp://?Id=T:Ionic.Zip.EncryptionAlgorithm">EncryptionAlgorithm</a> <span class="parameter">value</span>);
}</pre></div></div></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> Remarks</div><div class="sectionContent"><p>
               Set this property in order to encrypt the entry when the <span class="code">ZipFile</span> is
               saved. When setting this property, you must also set a <a href="ms-xhelp://?Id=P:Ionic.Zip.ZipEntry.Password">Password</a> on the entry.  If you set a value other than <a href="ms-xhelp://?Id=F:Ionic.Zip.EncryptionAlgorithm.None">None</a> on this property and do not set a
               <span class="code">Password</span> then the entry will not be encrypted. The <span class="code">ZipEntry</span>
               data is encrypted as the <span class="code">ZipFile</span> is saved, when you call <a href="ms-xhelp://?Id=M:Ionic.Zip.ZipFile.Save">Save<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a> or one of its cousins on the containing
               <span class="code">ZipFile</span> instance. You do not need to specify the <span class="code">Encryption</span>
               when extracting entries from an archive.
             </p><p>
               The Zip specification from PKWare defines a set of encryption algorithms,
               and the data formats for the zip archive that support them, and PKWare
               supports those algorithms in the tools it produces. Other vendors of tools
               and libraries, such as WinZip or Xceed, typically support <em>a
               subset</em> of the algorithms specified by PKWare. These tools can
               sometimes support additional different encryption algorithms and data
               formats, not specified by PKWare. The AES Encryption specified and
               supported by WinZip is the most popular example. This library supports a
               subset of the complete set of algorithms specified by PKWare and other
               vendors.
             </p><p>
               There is no common, ubiquitous multi-vendor standard for strong encryption
               within zip files. There is broad support for so-called "traditional" Zip
               encryption, sometimes called Zip 2.0 encryption, as <a href="http://www.pkware.com/documents/casestudies/APPNOTE.TXT" target="_blank">specified
               by PKWare</a>, but this encryption is considered weak and
               breakable. This library currently supports the Zip 2.0 "weak" encryption,
               and also a stronger WinZip-compatible AES encryption, using either 128-bit
               or 256-bit key strength. If you want DotNetZip to support an algorithm
               that is not currently supported, call the author of this library and maybe
               we can talk business.
             </p><p>
               The <a href="ms-xhelp://?Id=T:Ionic.Zip.ZipFile">ZipFile</a> class also has a <a href="ms-xhelp://?Id=P:Ionic.Zip.ZipFile.Encryption">Encryption</a> property.  In most cases you will use
               <em>that</em> property when setting encryption. This property takes
               precedence over any <span class="code">Encryption</span> set on the <span class="code">ZipFile</span> itself.
               Typically, you would use the per-entry Encryption when most entries in the
               zip archive use one encryption algorithm, and a few entries use a
               different one.  If all entries in the zip file use the same Encryption,
               then it is simpler to just set this property on the ZipFile itself, when
               creating a zip archive.
             </p><p>
               Some comments on updating archives: If you read a <span class="code">ZipFile</span>, you can
               modify the Encryption on an encrypted entry: you can remove encryption
               from an entry that was encrypted; you can encrypt an entry that was not
               encrypted previously; or, you can change the encryption algorithm.  The
               changes in encryption are not made permanent until you call Save() on the
               <span class="code">ZipFile</span>.  To effect changes in encryption, the entry content is
               streamed through several transformations, depending on the modification
               the application has requested. For example if the entry is not encrypted
               and the application sets <span class="code">Encryption</span> to <span class="code">PkzipWeak</span>, then at
               the time of <span class="code">Save()</span>, the original entry is read and decompressed,
               then re-compressed and encrypted.  Conversely, if the original entry is
               encrypted with <span class="code">PkzipWeak</span> encryption, and the application sets the
               <span class="code">Encryption</span> property to <span class="code">WinZipAes128</span>, then at the time of
               <span class="code">Save()</span>, the original entry is decrypted via PKZIP encryption and
               decompressed, then re-compressed and re-encrypted with AES.  This all
               happens automatically within the library, but it can be time-consuming for
               large entries.
             </p><p>
               Additionally, when updating archives, it is not possible to change the
               password when changing the encryption algorithm.  To change both the
               algorithm and the password, you need to Save() the zipfile twice.  First
               set the <span class="code">Encryption</span> to None, then call <span class="code">Save()</span>.  Then set the
               <span class="code">Encryption</span> to the new value (not "None"), then call <span class="code">Save()</span>
               once again.
             </p><p>
               The WinZip AES encryption algorithms are not supported on the .NET Compact
               Framework.
             </p></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> Examples</div><div class="sectionContent"><p>
               This example creates a zip archive that uses encryption, and then extracts
               entries from the archive.  When creating the zip archive, the ReadMe.txt
               file is zipped without using a password or encryption.  The other file
               uses encryption.
             </p><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-comment">// Create a zip archive with AES Encryption.</span>
<span class="highlight-keyword">using</span> (ZipFile zip = <span class="highlight-keyword">new</span> ZipFile())
{
    zip.AddFile(<span class="highlight-literal">"ReadMe.txt"</span>)
    ZipEntry e1= zip.AddFile(<span class="highlight-literal">"2008-Regional-Sales-Report.pdf"</span>);
    e1.Encryption= EncryptionAlgorithm.WinZipAes256;
    e1.Password= <span class="highlight-literal">"Top.Secret.No.Peeking!"</span>;
    zip.Save(<span class="highlight-literal">"EncryptedArchive.zip"</span>);
}

<span class="highlight-comment">// Extract a zip archive that uses AES Encryption.</span>
<span class="highlight-comment">// You do not need to specify the algorithm during extraction.</span>
<span class="highlight-keyword">using</span> (ZipFile zip = ZipFile.Read(<span class="highlight-literal">"EncryptedArchive.zip"</span>))
{
    <span class="highlight-comment">// Specify the password that is used during extraction, for</span>
    <span class="highlight-comment">// all entries that require a password:</span>
    zip.Password= <span class="highlight-literal">"Top.Secret.No.Peeking!"</span>;
    zip.ExtractAll(<span class="highlight-literal">"extractDirectory"</span>);
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-comment">' Create a zip that uses Encryption.</span>
<span class="highlight-keyword">Using</span> zip <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> ZipFile()
    zip.AddFile(<span class="highlight-literal">"ReadMe.txt"</span>)
    <span class="highlight-keyword">Dim</span> e1 <span class="highlight-keyword">as</span> ZipEntry
    e1= zip.AddFile(<span class="highlight-literal">"2008-Regional-Sales-Report.pdf"</span>)
    e1.Encryption= EncryptionAlgorithm.WinZipAes256
    e1.Password= <span class="highlight-literal">"Top.Secret.No.Peeking!"</span>
    zip.Save(<span class="highlight-literal">"EncryptedArchive.zip"</span>)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>

<span class="highlight-comment">' Extract a zip archive that uses AES Encryption.</span>
<span class="highlight-comment">' You do not need to specify the algorithm during extraction.</span>
<span class="highlight-keyword">Using</span> (zip <span class="highlight-keyword">as</span> ZipFile = ZipFile.Read(<span class="highlight-literal">"EncryptedArchive.zip"</span>))
    <span class="highlight-comment">' Specify the password that is used during extraction, for</span>
    <span class="highlight-comment">' all entries that require a password:</span>
    zip.Password= <span class="highlight-literal">"Top.Secret.No.Peeking!"</span>
    zip.ExtractAll(<span class="highlight-literal">"extractDirectory"</span>)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span></pre></div></span></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> Exceptions</div><div class="sectionContent"><table class="exceptions"><tr><th class="exceptionNameColumn">Exception</th><th class="exceptionConditionColumn">Condition</th></tr><tr><td><a href="http://msdn2.microsoft.com/en-us/library/2asft85a" target="_blank">InvalidOperationException</a></td><td>
             Thrown in the setter if EncryptionAlgorithm.Unsupported is specified.
             <br /></td></tr></table></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> See Also</div><div class="sectionContent"><a href="ms-xhelp://?Id=P:Ionic.Zip.ZipEntry.Password">ZipEntry.Password</a><br /><a href="ms-xhelp://?Id=P:Ionic.Zip.ZipFile.Encryption">ZipFile.Encryption</a><br /></div></div><p><div id="footer"><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:dpchiesa%40hotmail.com?Subject=Ionic Zip Library v1.9.1.6">dpchiesa@hotmail.com</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script><p />Copyright 2009-2011, Dino Chiesa</div>Assembly: <span sdata="assembly">Ionic.Zip</span> (Module: Ionic.Zip) Version: 1.9.1.8 (1.9.1.8)</p></div></body></html>