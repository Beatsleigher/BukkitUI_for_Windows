<?xml version="1.0" encoding="utf-8"?><html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns="http://www.w3.org/1999/xhtml"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><title>ExtractExistingFile Property </title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><script type="text/javascript"></script><meta name="file" content="b81d5374-eb19-96d3-413a-10c0752504c6" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="P:Ionic.Zip.ZipEntry.ExtractExistingFile" /><MSHelp:Keyword Index="A" Term="P:Ionic.Zip.ZipEntry.ExtractExistingFile" /><MSHelp:Keyword Index="A" Term="frlrfIonicZipZipEntryClassExtractExistingFileTopic" /><MSHelp:Keyword Index="K" Term="ExtractExistingFile property" /><MSHelp:Keyword Index="K" Term="ZipEntry.ExtractExistingFile property" /><MSHelp:Keyword Index="F" Term="ExtractExistingFile" /><MSHelp:Keyword Index="F" Term="ZipEntry.ExtractExistingFile" /><MSHelp:Keyword Index="F" Term="Ionic.Zip.ZipEntry.ExtractExistingFile" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="Ionic.Zip.dll" /><MSHelp:Attr Name="APIName" Value="Ionic.Zip.ZipEntry.ExtractExistingFile" /><MSHelp:Attr Name="APIName" Value="Ionic.Zip.ZipEntry.get_ExtractExistingFile" /><MSHelp:Attr Name="APIName" Value="Ionic.Zip.ZipEntry.set_ExtractExistingFile" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="The action the library should take when extracting a file that already exists." /></xml><link type="text/css" rel="stylesheet" /><script type="text/javascript"></script><meta name="SelfBranded" content="true" /><meta name="ContentType" content="Reference" /><meta name="Microsoft.Help.TopicVersion" content="100" /><meta name="Microsoft.Help.Keywords" content="ExtractExistingFile property" /><meta name="Microsoft.Help.Keywords" content="ZipEntry.ExtractExistingFile property" /><meta name="Microsoft.Help.F1" content="ExtractExistingFile" /><meta name="Microsoft.Help.F1" content="ZipEntry.ExtractExistingFile" /><meta name="Microsoft.Help.F1" content="Ionic.Zip.ZipEntry.ExtractExistingFile" /><meta name="Description" content="The action the library should take when extracting a file that already exists." /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><meta name="Microsoft.Help.Id" content="P:Ionic.Zip.ZipEntry.ExtractExistingFile" /><meta name="Microsoft.Help.TocParent" content="T:Ionic.Zip.ZipEntry" /><meta name="Microsoft.Help.TOCParentTopicVersion" content="100" /><meta name="Microsoft.Help.TocOrder" content="17" /></head><body><div id="control"><span class="productTitle">Ionic Zip Library v1.9.1.6</span><br /><span class="topicTitle">ExtractExistingFile Property </span><br /><div id="toolbar"><span id="chickenFeet"><a href="ms-xhelp://?Id=R:Project">Reference</a> ► <a href="ms-xhelp://?Id=N:Ionic.Zip">Ionic.Zip</a> ► <a href="ms-xhelp://?Id=T:Ionic.Zip.ZipEntry">ZipEntry</a> ► <span class="selflink">ExtractExistingFile</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs" /><option value="VisualBasic vb" /><option value="ManagedCPlusPlus cpp" /></select></span></div></div><div id="main"><span style="color: DarkGray"></span><div class="summary">
             The action the library should take when extracting a file that already exists.
             </div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');" /><td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');" /><td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');" /></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre xml:space="preserve">
<span class="keyword">public</span> <a href="ms-xhelp://?Id=T:Ionic.Zip.ExtractExistingFileAction">ExtractExistingFileAction</a> <span class="identifier">ExtractExistingFile</span> { <span class="keyword">get</span>; <span class="keyword">set</span>; }</pre></div><div class="code" x-lang="VisualBasic"><pre xml:space="preserve">
<span class="keyword">Public</span> <span class="keyword">Property</span> <span class="identifier">ExtractExistingFile</span> <span class="keyword">As</span> <a href="ms-xhelp://?Id=T:Ionic.Zip.ExtractExistingFileAction">ExtractExistingFileAction</a>
	<span class="keyword">Get</span>
	<span class="keyword">Set</span></pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre xml:space="preserve">
<span class="keyword">public</span>:
<span class="keyword">property</span> <a href="ms-xhelp://?Id=T:Ionic.Zip.ExtractExistingFileAction">ExtractExistingFileAction</a> <span class="identifier">ExtractExistingFile</span> {
	<a href="ms-xhelp://?Id=T:Ionic.Zip.ExtractExistingFileAction">ExtractExistingFileAction</a> <span class="keyword">get</span> ();
	<span class="keyword">void</span> <span class="keyword">set</span> (<a href="ms-xhelp://?Id=T:Ionic.Zip.ExtractExistingFileAction">ExtractExistingFileAction</a> <span class="parameter">value</span>);
}</pre></div></div></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> Remarks</div><div class="sectionContent"><p>
                 This property affects the behavior of the Extract methods (one of the
                 <span class="code">Extract()</span> or <span class="code">ExtractWithPassword()</span> overloads), when
                 extraction would would overwrite an existing filesystem file. If you do
                 not set this property, the library throws an exception when extracting
                 an entry would overwrite an existing file.
               </p><p>
                 This property has no effect when extracting to a stream, or when the file to be
                 extracted does not already exist.
               </p></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> Examples</div><div class="sectionContent">
               This example shows how to set the <span class="code">ExtractExistingFile</span> property in
               an <span class="code">ExtractProgress</span> event, in response to user input. The
               <span class="code">ExtractProgress</span> event is invoked if and only if the
               <span class="code">ExtractExistingFile</span> property was previously set to
               <span class="code">ExtractExistingFileAction.InvokeExtractProgressEvent</span>.
             <span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> ExtractProgress(<span class="highlight-keyword">object</span> sender, ExtractProgressEventArgs e)
{
    <span class="highlight-keyword">if</span> (e.EventType == ZipProgressEventType.Extracting_BeforeExtractEntry)
        Console.WriteLine(<span class="highlight-literal">"extract {0} "</span>, e.CurrentEntry.FileName);

    <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (e.EventType == ZipProgressEventType.Extracting_ExtractEntryWouldOverwrite)
    {
        ZipEntry entry = e.CurrentEntry;
        <span class="highlight-keyword">string</span> response = <span class="highlight-keyword">null</span>;
        <span class="highlight-comment">// Ask the user if he wants overwrite the file</span>
        <span class="highlight-keyword">do</span>
        {
            Console.Write(<span class="highlight-literal">"Overwrite {0} in {1} ? (y/n/C) "</span>, entry.FileName, e.ExtractLocation);
            response = Console.ReadLine();
            Console.WriteLine();

        } <span class="highlight-keyword">while</span> (response != <span class="highlight-keyword">null</span> &amp;&amp; response[<span class="highlight-number">0</span>]!=<span class="highlight-literal">'Y'</span> &amp;&amp;
                 response[<span class="highlight-number">0</span>]!=<span class="highlight-literal">'N'</span> &amp;&amp; response[<span class="highlight-number">0</span>]!=<span class="highlight-literal">'C'</span>);

        <span class="highlight-keyword">if</span>  (response[<span class="highlight-number">0</span>]==<span class="highlight-literal">'C'</span>)
            e.Cancel = <span class="highlight-keyword">true</span>;
        <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (response[<span class="highlight-number">0</span>]==<span class="highlight-literal">'Y'</span>)
            entry.ExtractExistingFile = ExtractExistingFileAction.OverwriteSilently;
        <span class="highlight-keyword">else</span>
            entry.ExtractExistingFile= ExtractExistingFileAction.DoNotOverwrite;
    }
}</pre></div></span></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img /> See Also</div><div class="sectionContent"><a href="ms-xhelp://?Id=P:Ionic.Zip.ZipFile.ExtractExistingFile">ExtractExistingFile</a><br /></div></div><p><div id="footer"><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:dpchiesa%40hotmail.com?Subject=Ionic Zip Library v1.9.1.6">dpchiesa@hotmail.com</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script><p />Copyright 2009-2011, Dino Chiesa</div>Assembly: <span sdata="assembly">Ionic.Zip</span> (Module: Ionic.Zip) Version: 1.9.1.8 (1.9.1.8)</p></div></body></html>